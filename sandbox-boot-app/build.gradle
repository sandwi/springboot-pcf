buildscript {
    apply from: "${rootDir}/repositories.gradle", to: buildscript

    ext {
        springBootVersion = '2.1.2.RELEASE'
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
        classpath "com.netflix.nebula:nebula-release-plugin:6.3.5"
        classpath "com.netflix.nebula:nebula-publishing-plugin:7.2.4"
    }
}

allprojects {

    task printVersion {
        doLast {
            println project.version
        }
    }
}

subprojects {
    ext {
        springFrameworkVersion = '5.1.4.RELEASE'
        springSecurityVersion = '5.1.3.RELEASE'
        springCloudVersion = 'Finchley.SR1'
        springCloudServicesVersion = '2.0.1.RELEASE' // PCF Cloud Services

        setVersion = { v ->
            return "${v}${System.env.BUILD_TARGET != null ? "-$System.env.BUILD_TARGET" : "-SNAPSHOT"}"
        }
    }

//    ext.setVersion = { v ->
//        return "${v}${System.env.BUILD_NUMBER != null ? "-$System.env.BUILD_NUMBER" : "-SNAPSHOT"}"
//    }

    group = 'com.sandbox.bank'
    version = ext.setVersion('1.0.0')

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
//    apply plugin: 'nebula.release'
//    apply plugin: 'checkstyle'
//    apply plugin: 'org.sonarqube'

    apply from: "${rootDir}/repositories.gradle"
    apply from: "${rootDir}/publish.gradle"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
        }

        dependencies {
            // Spring Boot
            dependency "org.springframework.boot:spring-boot-starter:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

            // Spring Framework
            dependency "org.springframework:spring-core:${springFrameworkVersion}"
            dependency "org.springframework:spring-beans:${springFrameworkVersion}"
            dependency "org.springframework:spring-context:${springFrameworkVersion}"
            dependency "org.springframework:spring-expression:${springFrameworkVersion}"
            dependency "org.springframework:spring-aop:${springFrameworkVersion}"
            dependency "org.springframework:spring-webmvc:${springFrameworkVersion}"

            // Spring Security
            dependency "org.springframework.security:spring-security-core:${springSecurityVersion}"
            dependency "org.springframework.security:spring-security-config:${springSecurityVersion}"
            dependency "org.springframework.security:spring-security-web:${springSecurityVersion}"
            // Spring Security OAuth2
            dependency "org.springframework.security:spring-security-oauth2-jose:${springSecurityVersion}"
            dependency "org.springframework.security:spring-security-oauth2-resource-server:${springSecurityVersion}"
            dependency "org.springframework.security:spring-security-oauth2-core:${springSecurityVersion}"
            dependency "org.springframework.security:spring-security-jwt:1.0.9.RELEASE"
            dependency "org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE"

            // Http session management
            dependency "org.springframework.session:spring-session-jdbc:2.1.1.RELEASE"

            // Useful java libs
            dependency "com.google.guava:guava:23.5-jre"
            dependency "org.projectlombok:lombok:1.16.18"

            // Apache libs
            dependency "org.apache.httpcomponents:httpclient:4.5.6"

            // Unit testing
            
            dependency "junit:junit:4.12"
            dependency "org.assertj:assertj-core:3.8.0"
            dependency "org.mockito:mockito-core:1.10.19"
            dependency "com.github.tomakehurst:wiremock:2.18.0"
            dependency "au.com.dius:pact-jvm-provider-junit_2.11:3.5.16"
            dependency "au.com.dius:pact-jvm-provider-spring_2.11:3.5.16"
            dependency "au.com.dius:pact-jvm-consumer-junit_2.11:3.5.16"

            // REST docs
            dependency "io.springfox:springfox-swagger2:2.8.0"
            dependency "io.springfox:springfox-swagger-ui:2.8.0"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    jar {
        archiveName "${baseName}-${project.version}.${extension}"
    }

    test {
        dependsOn 'cleanTest'
    }

//    checkstyle {
//        toolVersion = '8.8'
//        configFile = rootProject.file('google_checkstyle_checks.xml')
//        configProperties = [
//                'checkstyle.cache.file': "${buildDir}/checkstyle.cache",
//        ]
//        showViolations = true
//        checkstyleTest.enabled = false
//    }

//    sonarqube {
//        properties {
//            property "sonar.sourceEncoding", "UTF-8"
//            property 'sonar.projectName', 'Authorization'
//            property 'sonar.projectKey', 'Authorization'
//            property "sonar.host.url", "http://xxx:9000/sonar"
//            property "sonar.branch.name", "develop"
//
//        }
//    }
    
}
